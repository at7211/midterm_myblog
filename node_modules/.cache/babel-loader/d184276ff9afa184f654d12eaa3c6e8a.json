{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar TypeWritter =\n/** @class */\nfunction () {\n  function TypeWritter() {\n    this.dummyQueue = [];\n    this.eventQueue = []; // this.initTaskQueue()\n  }\n\n  TypeWritter.prototype.restartTypeWriter = function () {\n    this.memoWord = this.nextWord;\n    this.eventQueue = this.nextWord.split('');\n    this.erasing = false;\n    return '';\n  };\n  /**\n   * Main process function\n   * typing\n   *    |-- writing\n   *    |-- erasing\n   *    |-- restartWrite\n   *\n   * @returns\n   * @memberof TypeWritter\n   */\n\n\n  TypeWritter.prototype.typing = function () {\n    // earsing to last character, start write next word\n    if (this.erasing && !this.word) {\n      return this.restartTypeWriter();\n    } // earsing\n\n\n    if (this.erasing && this.word) {\n      return this.erase();\n    } // write end\n\n\n    if (this.word === this.memoWord) {\n      return this.word;\n    } // writing\n\n\n    var el = this.eventQueue.shift();\n    this.dummyQueue.push(el);\n    this.word = this.dummyQueue.join('');\n    return this.word;\n  };\n\n  TypeWritter.prototype.startTypeWord = function (str) {\n    this.erasing = true;\n    this.nextWord = str;\n    this.dummyQueue.pop();\n    this.word = this.dummyQueue.join('');\n    return this.word;\n  };\n\n  TypeWritter.prototype.erase = function () {\n    this.dummyQueue.pop();\n    this.word = this.dummyQueue.join('');\n    return this.word;\n  };\n\n  TypeWritter.prototype.rd = function () {\n    var r = Math.random();\n    return r > 0.1 || r < 0.07 ? this.rd() : r * 1000;\n  };\n\n  return TypeWritter;\n}();\n\nexports.default = TypeWritter;","map":null,"metadata":{},"sourceType":"script"}