{"ast":null,"code":"import _classCallCheck from \"/Users/yylslolz/Documents/WebProg2019/Practice06/own/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yylslolz/Documents/WebProg2019/Practice06/own/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yylslolz/Documents/WebProg2019/Practice06/own/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yylslolz/Documents/WebProg2019/Practice06/own/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yylslolz/Documents/WebProg2019/Practice06/own/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yylslolz/Documents/WebProg2019/Practice06/own/src/component/Articles/Articles.jsx\";\nimport React, { PureComponent } from 'react';\nimport Radium from 'radium';\nimport Posts from './Posts';\nimport FullPost from './FullPost';\nvar appear = Radium.keyframes({\n  '0%': {\n    opacity: 0\n  },\n  '100%': {\n    opacity: 1\n  }\n}, 'pulse');\nvar fakePost = [{\n  id: 1,\n  topic: '前端好難',\n  content: '上一篇講到的 Query 是 CRUD 裡面的 R (讀取)，這篇要講的 Mutation 則是負責處理 C (建立)、U (更新)、D (刪除) 等等的其他操作。延續上一篇的範例，這邊會繼續完成實作新增使用者、更改使用者名稱、刪除使用者三個 Mutation。'\n}, {\n  id: 2,\n  topic: '後端也好難',\n  content: 'TAT'\n}, {\n  id: 3,\n  topic: '學完redux發現有graphql',\n  content: 'QAQ'\n}];\nvar styles = {\n  postsWrapper: {\n    animationName: appear,\n    animationDuration: '1s',\n    animationFillMode: 'forwards',\n    height: '500%',\n    width: '100%',\n    padding: '10% 0 0 0',\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column'\n  },\n  h1: {\n    animationName: appear,\n    animationDuration: '1s',\n    animationFillMode: 'forwards'\n  }\n};\n\nvar Articles =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Articles, _PureComponent);\n\n  function Articles(props) {\n    var _this;\n\n    _classCallCheck(this, Articles);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Articles).call(this, props));\n\n    _this.postSelectedHandler = function (id) {\n      _this.props.history.push(\"/articles/\" + id);\n    };\n\n    _this.state = {\n      articles: []\n    };\n    return _this;\n  }\n\n  _createClass(Articles, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.node.scrollIntoView();\n      fetch(\"http://localhost:3001/api/articles\").then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        console.log(\"data: \", data);\n\n        _this2.setState({\n          articles: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var id = this.props.match.params.id;\n      var articles = this.state.articles;\n      console.log(articles);\n      var display = null;\n\n      if (id) {\n        var post = articles[id - 1];\n        display = post ? React.createElement(FullPost, {\n          title: post.title,\n          content: post.content,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }) : React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"Not found.\");\n      } else {\n        display = articles.map(function (post, id) {\n          return React.createElement(Posts, {\n            key: id,\n            title: post.title,\n            clicked: function clicked() {\n              return _this3.postSelectedHandler(post.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          });\n        });\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        ref: function ref(node) {\n          return _this3.node = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: styles.postsWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, display));\n    }\n  }]);\n\n  return Articles;\n}(PureComponent);\n\nexport default Radium(Articles);","map":{"version":3,"sources":["/Users/yylslolz/Documents/WebProg2019/Practice06/own/src/component/Articles/Articles.jsx"],"names":["React","PureComponent","Radium","Posts","FullPost","appear","keyframes","opacity","fakePost","id","topic","content","styles","postsWrapper","animationName","animationDuration","animationFillMode","height","width","padding","display","justifyContent","flexDirection","h1","Articles","props","postSelectedHandler","history","push","state","articles","node","scrollIntoView","fetch","then","res","json","data","console","log","setState","match","params","post","title","map"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport Radium from 'radium';\nimport Posts from './Posts';\nimport FullPost from './FullPost';\n\nconst appear = Radium.keyframes({\n  '0%': {opacity: 0,},\n  '100%': {opacity: 1},\n}, 'pulse');\n\nconst fakePost = [\n  {\n    id: 1,\n    topic: '前端好難',\n    content: '上一篇講到的 Query 是 CRUD 裡面的 R (讀取)，這篇要講的 Mutation 則是負責處理 C (建立)、U (更新)、D (刪除) 等等的其他操作。延續上一篇的範例，這邊會繼續完成實作新增使用者、更改使用者名稱、刪除使用者三個 Mutation。',\n  },\n  {\n    id: 2,\n    topic:'後端也好難',\n    content: 'TAT',\n  },\n  {\n    id: 3,\n    topic: '學完redux發現有graphql',\n    content: 'QAQ',\n  },\n]\n\nconst styles = {\n  postsWrapper: {\n    animationName: appear,\n    animationDuration: '1s',\n    animationFillMode: 'forwards',\n    height: '500%',\n    width: '100%',\n    padding: '10% 0 0 0',\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n  h1:{\n    animationName: appear,\n    animationDuration: '1s',\n    animationFillMode: 'forwards',\n  },\n};\n\nclass Articles extends PureComponent {\n  constructor(props){\n    super(props)\n    this.state = {\n      articles: [],\n    }\n  }\n\n  componentDidMount(){\n    this.node.scrollIntoView();\n\n    fetch(\"http://localhost:3001/api/articles\")\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"data: \", data)\n        this.setState({\n          articles: data,\n        })\n      })\n  }\n\n  postSelectedHandler = id => {\n    this.props.history.push(\"/articles/\" + id);\n  };\n\n  render() {\n    const { id } = this.props.match.params;\n    const { articles } = this.state;\n    console.log(articles)\n    let display = null;\n    if (id) {\n      let post = articles[id - 1];\n      display = post ? (\n        <FullPost\n          title={post.title}\n          content={post.content}\n        />\n      ) : (\n        <h1>Not found.</h1>\n      );\n    } else {\n      display = articles.map((post, id) => (\n        <Posts\n          key={id}\n          title={post.title}\n          clicked={() => this.postSelectedHandler(post.id)}\n        />\n      ));\n    }\n\n    return (\n      <>\n        <div ref={node => this.node = node} />\n        <div style={styles.postsWrapper}>\n          {display}\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Radium(Articles)\n"]},"metadata":{},"sourceType":"module"}